openapi: 3.1.0
info:
  title: AI Text & Plagiarism Detector
  version: "1.4.0"
servers:
  - url: https://ai-detection-1-197w.onrender.com
paths:
  /healthz:
    get:
      operationId: healthCheck
      summary: Check if API is running
      responses:
        "200": { description: OK }
  /analyze:
    post:
      operationId: analyzeText
      summary: Analyze text; returns summary, spans, readable Markdown, and an iframe-based HTML preview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [text]
              properties:
                text: { type: string }
                ai_threshold: { type: number, default: 0.65 }
                return_html: { type: boolean, default: true }
                plagiarism: { type: boolean, default: true }
                show_only_flagged: { type: boolean, default: false }
                show_score_badges: { type: boolean, default: true }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary: { type: object }
                  spans:
                    type: array
                    items:
                      type: object
                      properties:
                        index: { type: integer }
                        start: { type: integer }
                        end: { type: integer }
                        text: { type: string }
                        ai_score: { type: number }
                        ai_label: { type: string }
                        ai_flag: { type: boolean }
                        plagiarism_hits:
                          type: array
                          items:
                            type: object
                            properties:
                              url: { type: string }
                              title: { type: string }
                              similarity: { type: number }
                  html_preview: { type: string, description: "iframe-based HTML preview" }
                  markdown_summary: { type: string, description: "Always-readable Markdown summary with per-sentence labels" }
  /report:
    post:
      operationId: downloadReport
      summary: Generate and return a PDF report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [text]
              properties:
                text: { type: string }
                ai_threshold: { type: number, default: 0.65 }
                plagiarism: { type: boolean, default: true }
                show_only_flagged: { type: boolean, default: false }
      responses:
        "200":
          description: PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
